knitr::opts_chunk$set(
echo = TRUE,
eval = FALSE,
message = FALSE,
warning = FALSE,
error = FALSE,
out.width = "70%",
fig.width = 8,
fig.height = 6,
fig.retina = 3)
set.seed(6)
filter <- dplyr::filter
library(tidyverse)
library(janitor) #simplify column names, handle duplicates, managing missing data, generating summary tables
library(viridis) #provide a set of color scales suitable for creating color maps
library(plotly) #create interactive and dynamic visualization
library(ggrepel) #improve the readability of the plots
players <- read_csv(here::here("data/players.csv"))
teams <- read_csv(here::here("data/teams.csv") ) #another way to write the here without writing library(here)
setwd("/Users/davidlie/Documents/Uni yr 2/Sem 2/Data Analytics/Assignments/Assignment 1")
rm(list = ls())
rm(list = ls())
set.seed(33497567)
VCData = read.csv("WVSExtract.csv")
VC = VCData[sample(1:nrow(VCData),50000, replace=FALSE),]
VCData = read.csv("WVSExtract.csv")
setwd("/Users/davidlie/Documents/Uni yr 2/Sem 2/Data Analytics/Assignments/Assignment 1")
setwd("/Users/davidlie/Documents/Uni yr 2/Sem 2/Data Analytics/Assignments/Assignment 1")
VCData = read.csv("WVSExtract.csv")
VC = VCData[sample(1:nrow(VCData),50000, replace=FALSE),]
VC = VC[,c(1:6, sort(sample(7:46,17, replace = FALSE)), 47:53, sort(sample(54:69,10, replace = FALSE)))]
library(readr)
library(readr)
library(tidyverse)
#the echo = TRUE is a setting
platypus <- read_csv("platypus.csv") #this is how to read the csv specifically
#the echo = TRUE is a setting
platypus <- read_csv("platypus.csv") #this is how to read the csv specifically
platypus_vic <- platypus |>
filter(state == "Victoria") #filter is to find just the one in Victoria
library(tidyverse)
ggplot(data = platypus_vic, #ggplot is a function from tidyverse, so we need to run the library first
aes(x = longitude,
y = latitude)) +
geom_point() #scatter plot
# load the galah package, which contains the platypus data
library(galah)
platypus <- galah_call() |>  # Initialize a query
galah_identify("Ornithorhynchus anatinus") |>  # Specify the species
select("recordID",        # Select the unique record ID
"decimalLatitude",  # Select latitude coordinate
"decimalLongitude", # Select longitude coordinate
"cl22") |>          # Select state classification
atlas_occurrences()       # Fetch the occurrence records
# Rename columns for better readability
platypus <- platypus |>
dplyr::rename( "latitude" = "decimalLatitude",   # Rename latitude column
"longitude" = "decimalLongitude", # Rename longitude column
"state" = "cl22")                 # Rename state column
galah_config(atlas = "ALA",
email = "dlie0008@student.monash.edu")
platypus <- galah_call() |>  # Initialize a query
galah_identify("Ornithorhynchus anatinus") |>  # Specify the species
select("recordID",        # Select the unique record ID
"decimalLatitude",  # Select latitude coordinate
"decimalLongitude", # Select longitude coordinate
"cl22") |>          # Select state classification
atlas_occurrences()       # Fetch the occurrence records
# Rename columns for better readability
platypus <- platypus |>
dplyr::rename( "latitude" = "decimalLatitude",   # Rename latitude column
"longitude" = "decimalLongitude", # Rename longitude column
"state" = "cl22")                 # Rename state column
---
title: "ETC1010/5510 Tutorial 2 - OZ Atlas"
# Making a report
## About the data
The **Atlas of Living Australia (ALA)** is an open-access database that compiles biodiversity data from multiple sources, helping researchers and conservationists study Australia's unique ecosystems. More details can be found on the [ALA website](https://www.ala.org.au/).
library(readr)
library(tidyverse)
# Read data
## csv file use read_csv() from library(readr)
## text file use read_table() from library(readr)
## excel file use read_excel from library(readxl)
platypus <- read_csv("platypus.csv")
# Plot the full data set
ggplot(data = platypus, # The name of your data set
aes(x = longitude, # x-axis
y = latitude)) + # y-axis
geom_point() # Scatter plot
# Filter out observations from Victoria only
# Create a new name for the data set (platypus_vic)
platypus_vic <- platypus |>
filter(state == "Victoria")
# Plot the data of Victoria only
ggplot(data = platypus_vic, # Make sure is the Victoria data set
aes(x = longitude,
y = latitude)) +
geom_point() # Scatter plot
# Filter out observations from New South Wales only
# Create a new name for the data set (platypus_nsw)
platypus_nsw <- platypus |>
filter(state == "New South Wales")
# Display first 10 rows
head(platypus_nsw, 10) # head(data, no. of rows)
# Plot the data of New South Wales only
ggplot(data = platypus_nsw, # Make sure is the New South Wales data set
aes(x = longitude,
y = latitude)) +
geom_point() # Scatter plot
#-------------------QUESTION 2-----------------------------------------------
setwd("/Users/davidlie/Documents/Uni yr 2/Sem 2/FIT3152 - Data Analytics/Assignments")
# clean up the environment before starting
rm(list = ls())
library(slam)
library(tm)
library(SnowballC)
#Get file path to folder "" where the documents are located
cname = file.path(".", "Assignment 3", "articles")
cname
print(dir(cname))
docs = Corpus(DirSource((cname)))
print(summary(docs))
#-----------------QUESTION 3-------------------------------------------------
# Text preprocessing
docs <- tm_map(docs, removeNumbers) # Remove all numbers from the text
docs <- tm_map(docs, removePunctuation) # Remove all punctuation (like !, ?, .)
#-------------------QUESTION 2-----------------------------------------------
setwd("/Users/davidlie/Documents/Uni yr 2/Sem 2/FIT3152 - Data Analytics/Assignments")
# clean up the environment before starting
rm(list = ls())
library(slam)
library(tm)
library(SnowballC)
#Get file path to folder "" where the documents are located
cname = file.path(".", "Assignment 3", "articles")
cname
print(dir(cname))
docs = Corpus(DirSource((cname)))
docs = Corpus(DirSource((cname)))
print(dir(cname))
docs = Corpus(DirSource((cname)))
#-------------------QUESTION 2-----------------------------------------------
setwd("/Users/davidlie/Documents/Uni yr 2/Sem 2/FIT3152 - Data Analytics/Assignments")
# install.packages("readr")  # if needed
library(readr)
# 1) Read the semicolon-delimited CSV
df <- read_delim("olympic_has_medal_noc_year.csv", delim = ";", locale = locale(encoding = "UTF-8"))
setwd("/Users/davidlie/Documents/University/Uni year 3/FIT3179 - Data Visualization/Assignments/Assignment 2/dataset")
# 1) Read the semicolon-delimited CSV
df <- read_delim("olympic_has_medal_noc_year.csv", delim = ";", locale = locale(encoding = "UTF-8"))
# 2) Write out as comma-delimited (default)
write_csv(df, "olympic_has_medal_noc_year_commas.csv")
